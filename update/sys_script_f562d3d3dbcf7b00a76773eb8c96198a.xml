<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_14768_user_servi_user_onboard_jira</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Onboard api script</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	
var remedy_body={
"password": current.getValue("password"),
  "emailAddress": current.getValue("email"),
  "displayName": current.getValue("full_name"),
  "name": current.getValue("user_name")
};
var querypara=current.u_user_name;
var checkuser=callgetmethod(querypara);
	if(checkuser!=200 || checkuser!==201)
		{
			callpostmethod(remedy_body);
			
		}
		
 
	function callgetmethod(querypara)
	{
		try {
			gs.info('Execution get Method');
			var r = new sn_ws.RESTMessageV2('x_14768_user_servi.Add User to AD', 'Default GET');
			r.setQueryParameter('username',querypara);
			var response = r.execute();
			var responseBody = response.getBody();
			var httpStatus = response.getStatusCode();
			gs.info('Execution get Method status' +httpStatus);
			return httpStatus;
		}
		catch(ex) {
			var message = ex.message;
			gs.info('Execution get Method error' +message);
			return 0;
			}
	}
	function callpostmethod(remedy_body)
	{
		try {
			gs.info('Execution Post Method');
			var r = new sn_ws.RESTMessageV2('x_14768_user_servi.Add User to AD', 'Post Method');
			r.setRequestBody(JSON.stringify(remedy_body));
			var response = r.execute();
			var responseBody = response.getBody();
			var httpStatus = response.getStatusCode();
			gs.info('Execution Post Method status' +httpStatus);
			return httpStatus;
		}
		catch(ex) {
			var message = ex.message;
			gs.info('Execution Post Method error' +message);
			return 0;
		}
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>rle0505</sys_created_by>
        <sys_created_on>2019-08-09 11:43:40</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>f562d3d3dbcf7b00a76773eb8c96198a</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>Onboard api script</sys_name>
        <sys_overrides/>
        <sys_package display_value="User Service Management" source="x_14768_user_servi">76fce6dbdb0f7b00a76773eb8c961972</sys_package>
        <sys_policy/>
        <sys_scope display_value="User Service Management">76fce6dbdb0f7b00a76773eb8c961972</sys_scope>
        <sys_update_name>sys_script_f562d3d3dbcf7b00a76773eb8c96198a</sys_update_name>
        <sys_updated_by>rle0505</sys_updated_by>
        <sys_updated_on>2019-08-20 09:19:27</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=f562d3d3dbcf7b00a76773eb8c96198a"/>
</record_update>
